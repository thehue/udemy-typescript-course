{"version":3,"sources":["src/models/User.ts","src/index.ts"],"names":[],"mappings":";;;;;;ACAA,IAAA,MAAA,GAAA,OAAA,CAAA,eAAA,CAAA;ADOA,IAAA,IAAA;ACLA,ADKA,ICLM,IAAI,GAAG,IAAI,MAAA,CAAA,IAAJ,CAAS;AAAE,ADKxB,ECLwB,IAAI,EAAE,IDK9B,ICLsB;AAAkB,ADQtC,ECRsC,GAAG,EAAE,IDQ3C,IAAA,CAAoB,IAApB,EAAmC;ACRf,ADQA,CCRT,CAAb,ODQsB,IAAA,GAAA,IAAA;ACNtB,ADIE,ICJE,CAAC,EAAL,CAAQ,CDIN,MAAA,CCJF,EAAkB,ADIwB,EAAxC,UCJgB;AAChB,ADKuC,ECLvC,OAAO,CAAC,GAAR,CAAY,QAAZ;AACD,CAFD;AAGA,ADKE,EAAA,ECLE,CAAC,CDKH,CCLF,ADKE,CCLM,QAAR,ADKE,CAAA,CCLgB,EDKhB,GAAA,OCLgB,GDKZ,QAAJ,EAAoB;ACJpB,ADKE,ECLF,OAAO,CAAC,CDKC,ECLT,CAAY,EDKE,IAAL,CAAU,CCLnB,ODKS,CAAP;ACJH,ADKE,CCPH,EDKE;ACDF,IAAI,CAAC,EAAL,CAAQ,OAAR,EAAiB,YAAA;AACf,ADIA,ECJA,ADIA,IAAA,CAAA,ECJO,CAAC,GAAR,CAAY,EDIZ,CAAA,GAAA,ECJA,CDIA,UAAI,MAAJ,EAAqB;ACHtB,ADIG,CCNJ,GDMI,MAAM,CAAC,MAAP,CAAc,KAAK,IAAnB,EAAyB,MAAzB;ACFJ,ADGG,GAFD,CCDE,CAAC,OAAL,CAAa,QAAb;;ADKE,EAAA,IAAA,CAAA,SAAA,CAAA,EAAA,GAAA,UAAG,SAAH,EAAsB,QAAtB,EAAwC;AACtC,QAAM,QAAQ,GAAG,KAAK,MAAL,CAAY,SAAZ,KAA0B,EAA3C;AACA,IAAA,QAAQ,CAAC,IAAT,CAAc,QAAd;AACA,SAAK,MAAL,CAAY,SAAZ,IAAyB,QAAzB;AACD,GAJD;;AAMA,EAAA,IAAA,CAAA,SAAA,CAAA,OAAA,GAAA,UAAQ,SAAR,EAAyB;AACvB,QAAM,QAAQ,GAAG,KAAK,MAAL,CAAY,SAAZ,CAAjB;;AAEA,QAAG,CAAC,QAAD,IAAa,QAAQ,CAAC,MAAT,KAAoB,CAApC,EAAsC;AACpC;AACD;;AAED,IAAA,QAAQ,CAAC,OAAT,CAAiB,UAAA,QAAA,EAAQ;AACvB,MAAA,QAAQ;AACT,KAFD;AAGD,GAVD;;AAWF,SAAA,IAAA;AA9BA,CAAA,EAAA;;AAAa,OAAA,CAAA,IAAA,GAAA,IAAA","file":"src.f10117fe.js","sourceRoot":"..","sourcesContent":["interface UserProps {\n  name?: string;\n  age?: number;\n}\n\ntype Callback = () => void\n\nexport class User {\n  events: { [key: string]: Callback[] } = {};\n\n  constructor(private data: UserProps) {} \n  \n  get(propName: string): (number | string) {\n    return this.data[propName];\n  }\n\n  set(update: UserProps): void {\n    Object.assign(this.data, update);\n  }\n\n  on(eventName: string, callback: Callback): void {\n    const handlers = this.events[eventName] || [];\n    handlers.push(callback);\n    this.events[eventName] = handlers;\n  }\n\n  trigger(eventName: string): void{\n    const handlers = this.events[eventName];\n\n    if(!handlers || handlers.length === 0){\n      return;\n    }\n\n    handlers.forEach(callback => {\n      callback();\n    });\n  }\n}\n","import { User } from \"./models/User\";\n\nconst user = new User({ name: 'myname', age: 20 });\n\nuser.on('change', () => {\n  console.log('hello1');\n});\nuser.on('change', () => {\n  console.log('hello2');\n});\n\nuser.on('click', () => {\n  console.log('click!');\n});\n\nuser.trigger('change');\n"]}